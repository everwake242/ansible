# vim: ts=2 sw=2 ai paste

---
- hosts: all
  become: true
  vars:
    k8s_master_node: 'k8s1'
    k8s_slaves:
      - k8s2
      - k8s3
    pod_network_cidr: '10.243.0.0/16'

  tasks:

  - name: Install prereq packages
    apt:
      name: '{{ item }}'
      state: latest
      update_cache: no
    with_items:
      - apt-transport-https     
      - docker.io
    tags: kubernetes 

  - name: ensure docker engine is started
    systemd:
      name: docker
      state: started
      enabled: True

  - name: add google apt key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
    tags: kubernetes      

  - name: add apt repo for kubernetes
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
    tags: kubernetes

  - name: Install kubeadm and prereq packages
    apt:
      name: kubeadm
      state: latest
      update_cache: yes      
    tags: kubernetes

  - name: Initialize kubernetes
    command: kubeadm init --pod-network-cidr '{{ pod_network_cidr }}'
    when:  inventory_hostname == k8s_master_node 
    register: kubeadm_output    
    tags: kubernetes

  ### to make kubectl work, this needs to be done, and kubectl needs to run as non-root
# sudo cp /etc/kubernetes/admin.conf $HOME/
# sudo chown $(id -u):$(id -g) $HOME/admin.conf
# export KUBECONFIG=$HOME/admin.conf
    

  # - name: show kubeadm output
  #   debug:
  #     var: kubeadm_output.stdout
  
  - name: get cluster token
    shell:  /usr/bin/kubeadm token list |tail -1| awk '{ print $1 }'
    when:  inventory_hostname == k8s_master_node 
    register: k8s_cluster_token    
    tags: kubernetes

  - name: show kubeadm output
    debug:
      var: k8s_cluster_token
  - name: ':: cluster :: Joining node to Kubernetes cluster'
    command: 'kubeadm join --token {{ k8s_cluster_token }} {{ k8s_master_node }}:6443 --discovery-token-unsafe-skip-ca-verification'      
    when:  inventory_hostname != k8s_master_node 
