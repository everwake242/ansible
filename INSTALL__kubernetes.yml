# vim: ts=2 sw=2 ai paste

---
- hosts: all
  become: true
  vars:
    k8s_master_node: 'k8s1'
    k8s_slaves:
      - k8s2
      - k8s3
    pod_network_cidr: '10.244.0.0/16'  ## this is coded into the flannel deploy and cannot be changed at will

  tasks:

  - name: Install prereq packages
    apt:
      name: '{{ item }}'
      state: latest
      update_cache: no
    with_items:
      - apt-transport-https     
      - docker.io
    tags: kubernetes 

  - name: ensure docker engine is started
    systemd:
      name: docker
      state: started
      enabled: True

  - name: add google apt key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
    tags: kubernetes      

  - name: add apt repo for kubernetes
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
    tags: kubernetes

  - name: Install kubeadm and prereq packages
    apt:
      name: kubeadm
      state: latest
      update_cache: yes      
    tags: kubernetes

  - stat:
      path: /var/lib/etcd
    register: etcd_folder    

  - name: Initialize kubernetes
    command: kubeadm init --pod-network-cidr '{{ pod_network_cidr }}'
    when:  inventory_hostname == k8s_master_node and etcd_folder.stat.exists != true 
    register: kubeadm_output   
    tags: kubernetes

  ### to make kubectl work, this needs to be done, and kubectl needs to run as non-root
# sudo cp /etc/kubernetes/admin.conf $HOME/
# sudo chown $(id -u):$(id -g) $HOME/admin.conf
# export KUBECONFIG=$HOME/admin.conf
    

  # - name: show kubeadm output
  #   debug:
  #     var: kubeadm_output.stdout
  
  - name: get cluster token from master node
    shell:  /usr/bin/kubeadm token list |tail -1| awk '{ print $1 }'
#    when:  inventory_hostname == k8s_master_node 
    register: k8s_node_token    
    delegate_to: '{{ k8s_master_node }}'
    run_once: true
    tags: kubernetes


  - set_fact: 
      k8s_cluster_token: "{{ k8s_node_token }}"
    delegate_to: "{{ k8s_slaves }}"
    delegate_facts: True

  - name: show cluster token fact 
    debug:
      var: '{{ k8s_cluster_token }}'

  - name: show kubeadm output for debug
    debug:
      var: k8s_node_token

  - stat:
      path: /etc/kubernetes/kubelet.conf
    register: kubeletconf_file

#  - name: show token output as hostvar with variable
#    debug:
#      var: hostvars['k8s1']['k8s_node_token']['stdout']
#      var: hostvars['{{ k8s_master_node }}']['k8s_node_token']['stdout']

#### rewrite token to usable form
#  - set_fact:
#      k8s_cluster_token: "{{ hostvars['{{ 'k8s_master_node' }}']['k8s_node_token']['stdout'] }}"
#      k8s_cluster_token: '{{ hostvars['{{ k8s_master_node }}']['{{ k8s_node_token }}']['stdout'] }}'
#      k8s_cluster_token: '{{ hostvars['k8s_master_node']['k8s_node_token']['stdout'] }}'
#      k8s_cluster_token: '{{ hostvars["k8s_master_node"]["k8s_node_token"]["stdout"] }}'
#      k8s_cluster_token: "hostvars['k8s_master_node']['k8s_node_token']['stdout']" 
#      delegate_facts: True

#  - name: show cluster token fact 
#    debug:
#      var: '{{ k8s_cluster_token }}'

  - name: Joining node to Kubernetes cluster
#    shell: kubeadm join --token {{ k8s_node_token.stdout }} {{ k8s_master_node }}:6443 --discovery-token-unsafe-skip-ca-verification      
    shell: kubeadm join --token {{ k8s_cluster_token.stdout }} {{ k8s_master_node }}:6443 --discovery-token-unsafe-skip-ca-verification      
    when:  inventory_hostname != k8s_master_node 

  - name: install flannel 
    shell: '/usr/bin/kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml'      
    when:  inventory_hostname == k8s_master_node and kubeletconf_file.stat.exists == true 
